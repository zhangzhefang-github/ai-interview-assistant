"""create_interview_logs_and_reports_tables_and_update_interviews

Revision ID: 3b925d63416d
Revises: None
Create Date: <Will be auto-filled or you can set a specific date like 2024-05-17 10:00:00>

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql # If you need specific MySQL types like JSON

# revision identifiers, used by Alembic.
revision: str = '3b925d63416d'
down_revision: Union[str, None] = None # This is the first significant migration
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create interview_logs table
    op.create_table('interview_logs',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('interview_id', sa.Integer(), nullable=False),
        sa.Column('question_id', sa.Integer(), nullable=True),
        sa.Column('question_text_snapshot', sa.Text(), nullable=True),
        sa.Column('full_dialogue_text', sa.Text(), nullable=False),
        sa.Column('order_num', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['interview_id'], ['interviews.id'], ),
        sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interview_logs_id'), 'interview_logs', ['id'], unique=False)

    # Create reports table
    op.create_table('reports',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('interview_id', sa.Integer(), nullable=False),
        sa.Column('generated_text', sa.Text(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['interview_id'], ['interviews.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('interview_id') # Ensure one report per interview
    )
    op.create_index(op.f('ix_reports_id'), 'reports', ['id'], unique=False)

    # Update interviews table
    op.add_column('interviews', sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=True))
    
    with op.batch_alter_table('interviews', schema=None) as batch_op:
        batch_op.drop_column('conversation_log')
        batch_op.drop_column('report')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    with op.batch_alter_table('interviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('report', mysql.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('conversation_log', mysql.TEXT(), nullable=True))
        batch_op.drop_column('updated_at')

    op.drop_index(op.f('ix_reports_id'), table_name='reports')
    op.drop_table('reports')

    op.drop_index(op.f('ix_interview_logs_id'), table_name='interview_logs')
    op.drop_table('interview_logs')
    
    # ### end Alembic commands ###
